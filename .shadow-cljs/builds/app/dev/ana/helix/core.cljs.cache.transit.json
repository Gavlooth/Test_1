["^ ","~:output",["^ ","~:js","goog.provide('helix.core');\ngoog.scope(function(){\n  helix.core.goog$module$goog$object = goog.module.get('goog.object');\n});\nvar module$node_modules$react$index=shadow.js.require(\"module$node_modules$react$index\", {});\nif((typeof Symbol !== 'undefined')){\n(Symbol.prototype.cljs$core$IPrintWithWriter$ = cljs.core.PROTOCOL_SENTINEL);\n\n(Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = (function (sym,writer,_){\nvar sym__$1 = this;\nreturn cljs.core._write(writer,[\"\\\"\",cljs.core.str.cljs$core$IFn$_invoke$arity$1(sym__$1.toString()),\"\\\"\"].join(''));\n}));\n} else {\n}\nhelix.core.Fragment = module$node_modules$react$index.Fragment;\nhelix.core.Suspense = module$node_modules$react$index.Suspense;\nhelix.core.create_element = module$node_modules$react$index.createElement;\nhelix.core.create_context = module$node_modules$react$index.createContext;\nhelix.core.get_react = (function helix$core$get_react(){\nreturn module$node_modules$react$index;\n});\n/**\n * Create a new React element from a valid React type.\n * \n *   Example:\n *   ```\n *   ($ MyComponent\n * \"child1\"\n * ($ \"span\"\n *   {:style {:color \"green\"}}\n *   \"child2\" ))\n *   ```\n */\nhelix.core.$ = (function helix$core$$(var_args){\nvar args__4870__auto__ = [];\nvar len__4864__auto___51325 = arguments.length;\nvar i__4865__auto___51326 = (0);\nwhile(true){\nif((i__4865__auto___51326 < len__4864__auto___51325)){\nargs__4870__auto__.push((arguments[i__4865__auto___51326]));\n\nvar G__51327 = (i__4865__auto___51326 + (1));\ni__4865__auto___51326 = G__51327;\ncontinue;\n} else {\n}\nbreak;\n}\n\nvar argseq__4871__auto__ = ((((1) < args__4870__auto__.length))?(new cljs.core.IndexedSeq(args__4870__auto__.slice((1)),(0),null)):null);\nreturn helix.core.$.cljs$core$IFn$_invoke$arity$variadic((arguments[(0)]),argseq__4871__auto__);\n});\n\n(helix.core.$.cljs$core$IFn$_invoke$arity$variadic = (function (type,args){\nvar _QMARK_p = cljs.core.first(args);\nvar _QMARK_c = cljs.core.rest(args);\nvar native_QMARK_ = (function (){var or__4253__auto__ = (type instanceof cljs.core.Keyword);\nif(or__4253__auto__){\nreturn or__4253__auto__;\n} else {\nvar or__4253__auto____$1 = typeof type === 'string';\nif(or__4253__auto____$1){\nreturn or__4253__auto____$1;\n} else {\nreturn new cljs.core.Keyword(null,\"native\",\"native\",-613060878).cljs$core$IFn$_invoke$arity$1(cljs.core.meta(type));\n}\n}\n})();\nvar type_SINGLEQUOTE_ = (((type instanceof cljs.core.Keyword))?cljs.core.name(type):type);\nif(cljs.core.map_QMARK_(_QMARK_p)){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(helix.core.create_element,type_SINGLEQUOTE_,(cljs.core.truth_(native_QMARK_)?helix.impl.props._dom_props.cljs$core$IFn$_invoke$arity$1(_QMARK_p):helix.impl.props._props.cljs$core$IFn$_invoke$arity$1(_QMARK_p)),_QMARK_c);\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(helix.core.create_element,type_SINGLEQUOTE_,null,args);\n}\n}));\n\n(helix.core.$.cljs$lang$maxFixedArity = (1));\n\n/** @this {Function} */\n(helix.core.$.cljs$lang$applyTo = (function (seq51250){\nvar G__51251 = cljs.core.first(seq51250);\nvar seq51250__$1 = cljs.core.next(seq51250);\nvar self__4851__auto__ = this;\nreturn self__4851__auto__.cljs$core$IFn$_invoke$arity$variadic(G__51251,seq51250__$1);\n}));\n\n/**\n * Dynamically create a new React element from a valid React type.\n * \n *   `$` can typically be faster, because it will statically process the arguments\n *   at macro-time if possible.\n * \n *   Example:\n *   ```\n *   ($$ MyComponent\n * \"child1\"\n * ($$ \"span\"\n *   {:style {:color \"green\"}}\n *   \"child2\" ))\n *   ```\n */\nhelix.core.$$ = helix.core.$;\n\n/**\n * @interface\n */\nhelix.core.IExtractType = function(){};\n\nvar helix$core$IExtractType$_type$dyn_51334 = (function (factory){\nvar x__4550__auto__ = (((factory == null))?null:factory);\nvar m__4551__auto__ = (helix.core._type[goog.typeOf(x__4550__auto__)]);\nif((!((m__4551__auto__ == null)))){\nreturn (m__4551__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4551__auto__.cljs$core$IFn$_invoke$arity$1(factory) : m__4551__auto__.call(null,factory));\n} else {\nvar m__4549__auto__ = (helix.core._type[\"_\"]);\nif((!((m__4549__auto__ == null)))){\nreturn (m__4549__auto__.cljs$core$IFn$_invoke$arity$1 ? m__4549__auto__.cljs$core$IFn$_invoke$arity$1(factory) : m__4549__auto__.call(null,factory));\n} else {\nthrow cljs.core.missing_protocol(\"IExtractType.-type\",factory);\n}\n}\n});\n/**\n * Extracts the underlying type from the factory function.\n */\nhelix.core._type = (function helix$core$_type(factory){\nif((((!((factory == null)))) && ((!((factory.helix$core$IExtractType$_type$arity$1 == null)))))){\nreturn factory.helix$core$IExtractType$_type$arity$1(factory);\n} else {\nreturn helix$core$IExtractType$_type$dyn_51334(factory);\n}\n});\n\nhelix.core.type = (function helix$core$type(f){\nreturn helix.core._type(f);\n});\n/**\n * Creates a factory function for a React component\n */\nhelix.core.factory = (function helix$core$factory(type){\nvar x51271 = (function() { \nvar helix$core$factory_$_factory__delegate = function (args){\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$3(helix.core.$,type,args);\n};\nvar helix$core$factory_$_factory = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__51340__i = 0, G__51340__a = new Array(arguments.length -  0);\nwhile (G__51340__i < G__51340__a.length) {G__51340__a[G__51340__i] = arguments[G__51340__i + 0]; ++G__51340__i;}\n  args = new cljs.core.IndexedSeq(G__51340__a,0,null);\n} \nreturn helix$core$factory_$_factory__delegate.call(this,args);};\nhelix$core$factory_$_factory.cljs$lang$maxFixedArity = 0;\nhelix$core$factory_$_factory.cljs$lang$applyTo = (function (arglist__51341){\nvar args = cljs.core.seq(arglist__51341);\nreturn helix$core$factory_$_factory__delegate(args);\n});\nhelix$core$factory_$_factory.cljs$core$IFn$_invoke$arity$variadic = helix$core$factory_$_factory__delegate;\nreturn helix$core$factory_$_factory;\n})()\n;\n(x51271.helix$core$IExtractType$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x51271.helix$core$IExtractType$_type$arity$1 = (function (_){\nvar ___$1 = this;\nreturn type;\n}));\n\nreturn x51271;\n});\nhelix.core.cljs_factory = (function helix$core$cljs_factory(type){\nvar x51280 = (function() { \nvar helix$core$cljs_factory_$_factory__delegate = function (args){\nif(cljs.core.map_QMARK_(cljs.core.first(args))){\nvar props = cljs.core.first(args);\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(module$node_modules$react$index.createElement,type,({\"helix/props\": cljs.core.dissoc.cljs$core$IFn$_invoke$arity$variadic(props,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2([new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967)], 0)), \"key\": cljs.core.get.cljs$core$IFn$_invoke$arity$3(props,new cljs.core.Keyword(null,\"key\",\"key\",-1516042587),undefined), \"ref\": cljs.core.get.cljs$core$IFn$_invoke$arity$3(props,new cljs.core.Keyword(null,\"ref\",\"ref\",1289896967),undefined)}),cljs.core.rest(args));\n} else {\nreturn cljs.core.apply.cljs$core$IFn$_invoke$arity$4(module$node_modules$react$index.createElement,type,({}),args);\n}\n};\nvar helix$core$cljs_factory_$_factory = function (var_args){\nvar args = null;\nif (arguments.length > 0) {\nvar G__51344__i = 0, G__51344__a = new Array(arguments.length -  0);\nwhile (G__51344__i < G__51344__a.length) {G__51344__a[G__51344__i] = arguments[G__51344__i + 0]; ++G__51344__i;}\n  args = new cljs.core.IndexedSeq(G__51344__a,0,null);\n} \nreturn helix$core$cljs_factory_$_factory__delegate.call(this,args);};\nhelix$core$cljs_factory_$_factory.cljs$lang$maxFixedArity = 0;\nhelix$core$cljs_factory_$_factory.cljs$lang$applyTo = (function (arglist__51345){\nvar args = cljs.core.seq(arglist__51345);\nreturn helix$core$cljs_factory_$_factory__delegate(args);\n});\nhelix$core$cljs_factory_$_factory.cljs$core$IFn$_invoke$arity$variadic = helix$core$cljs_factory_$_factory__delegate;\nreturn helix$core$cljs_factory_$_factory;\n})()\n;\n(x51280.helix$core$IExtractType$ = cljs.core.PROTOCOL_SENTINEL);\n\n(x51280.helix$core$IExtractType$_type$arity$1 = (function (_){\nvar ___$1 = this;\nreturn type;\n}));\n\nreturn x51280;\n});\nhelix.core.assoc_some = (function helix$core$assoc_some(m,k,x){\nif((!((x == null)))){\nreturn cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m,k,x);\n} else {\nreturn m;\n}\n});\nhelix.core.extract_cljs_props = (function helix$core$extract_cljs_props(o){\nif(((goog.DEBUG) && (((cljs.core.map_QMARK_(o)) || ((o == null)))))){\nthrow cljs.core.ex_info.cljs$core$IFn$_invoke$arity$2(\"Props received were a map. This probably means you're calling your component as a function.\",new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null,\"props\",\"props\",453281727),o], null));\n} else {\n}\n\nvar temp__5718__auto__ = helix.core.goog$module$goog$object.get(o,\"helix/props\");\nif(cljs.core.truth_(temp__5718__auto__)){\nvar props = temp__5718__auto__;\nreturn helix.core.assoc_some(props,new cljs.core.Keyword(null,\"children\",\"children\",-940561982),helix.core.goog$module$goog$object.get(o,\"children\"));\n} else {\nreturn cljs_bean.core.bean.cljs$core$IFn$_invoke$arity$1(o);\n}\n});\nhelix.core.props_kvs_identical_QMARK_ = (function helix$core$props_kvs_identical_QMARK_(prev,cur){\nvar prev_props = helix.core.extract_cljs_props(prev);\nvar cur_props = helix.core.extract_cljs_props(cur);\nreturn ((cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.count(prev_props),cljs.core.count(cur_props))) && (cljs.core.every_QMARK_((function (p1__51289_SHARP_){\nreturn (cljs.core.get.cljs$core$IFn$_invoke$arity$2(prev_props,p1__51289_SHARP_) === cljs.core.get.cljs$core$IFn$_invoke$arity$2(cur_props,p1__51289_SHARP_));\n}),cljs.core.keys(cur_props))));\n});\n/**\n * Like React.memo, but passes props to `compare` as CLJS map-likes instead of\n *   JS objects.\n *   `compare` should return true if props are equal, and false if not.\n */\nhelix.core.memo = (function helix$core$memo(var_args){\nvar G__51304 = arguments.length;\nswitch (G__51304) {\ncase 1:\nreturn helix.core.memo.cljs$core$IFn$_invoke$arity$1((arguments[(0)]));\n\nbreak;\ncase 2:\nreturn helix.core.memo.cljs$core$IFn$_invoke$arity$2((arguments[(0)]),(arguments[(1)]));\n\nbreak;\ndefault:\nthrow (new Error([\"Invalid arity: \",cljs.core.str.cljs$core$IFn$_invoke$arity$1(arguments.length)].join('')));\n\n}\n});\n\n(helix.core.memo.cljs$core$IFn$_invoke$arity$1 = (function (component){\nreturn module$node_modules$react$index.memo(component,helix.core.props_kvs_identical_QMARK_);\n}));\n\n(helix.core.memo.cljs$core$IFn$_invoke$arity$2 = (function (component,compare){\nreturn module$node_modules$react$index.memo(component,(function helix$core$memo_compare(o,o_SINGLEQUOTE_){\nvar G__51306 = helix.core.extract_cljs_props(o);\nvar G__51307 = helix.core.extract_cljs_props(o_SINGLEQUOTE_);\nreturn (compare.cljs$core$IFn$_invoke$arity$2 ? compare.cljs$core$IFn$_invoke$arity$2(G__51306,G__51307) : compare.call(null,G__51306,G__51307));\n}));\n}));\n\n(helix.core.memo.cljs$lang$maxFixedArity = 2);\n\nhelix.core.create_component = (function helix$core$create_component(spec,statics){\nvar render = spec.render;\nvar render_SINGLEQUOTE_ = (function (this$){\nvar G__51316 = this$;\nvar G__51317 = helix.core.extract_cljs_props(this$.props);\nvar G__51318 = this$.state;\nreturn (render.cljs$core$IFn$_invoke$arity$3 ? render.cljs$core$IFn$_invoke$arity$3(G__51316,G__51317,G__51318) : render.call(null,G__51316,G__51317,G__51318));\n});\nhelix.core.goog$module$goog$object.set(spec,\"render\",render_SINGLEQUOTE_);\n\nreturn helix.impl.classes.createComponent(module$node_modules$react$index.Component,spec,statics);\n});\n/**\n * Registers a component with the React Fresh runtime.\n *   `type` is the component function, and `id` is the unique ID assigned to it\n *   (e.g. component name) for cache invalidation.\n */\nhelix.core.register_BANG_ = (function helix$core$register_BANG_(type,id){\nif((!((window.$$Register$$ == null)))){\nreturn window.$$Register$$(type,id);\n} else {\nreturn null;\n}\n});\nhelix.core.signature_BANG_ = (function helix$core$signature_BANG_(){\nvar and__4251__auto__ = (!((window.$$Signature$$ == null)));\nif(and__4251__auto__){\nreturn window.$$Signature$$();\n} else {\nreturn and__4251__auto__;\n}\n});\n","~:ns-info",["^ ","~:rename-macros",null,"~:renames",["^ "],"~:meta",["^ ","~:file","helix/core.cljs","~:line",1,"~:column",5,"~:end-line",1,"~:end-column",15],"~:ns-aliases",["^ ","~$cljs.loader","~$shadow.loader","~$clojure.pprint","~$cljs.pprint","~$clojure.spec.alpha","~$cljs.spec.alpha","~$clojure.core.match","~$cljs.core.match","~$clojure.core.async","~$cljs.core.async"],"~:use-macros",null,"~:excludes",["~#set",["~$type"]],"~:macros",["^ ","~$provider",["^ ","~:arglists",["~#list",[[["^ ","~:keys",["~$context","~$value"],"~:as","~$props"],"~$&","~$children"]]],"~:doc","Creates a Provider for a React Context value.\n\n  Example:\n\n    (def my-context (react/createContext))\n\n    (provider {:context my-context :value my-value} child1 child2 ...childN)","^7",66,"^8",1,"^6","helix/core.clj","~:name","~$helix.core/provider","~:ns","~$helix.core","~:macro",true],"~$defnc",["^ ","^L",["^M",[["~$display-name","~$&","~$form-body"]]],"^T","Creates a new functional React component. Used like:\n\n  (defnc component-name\n    \"Optional docstring\"\n    [props ?ref]\n    {,,,opts-map}\n    ,,,body)\n\n  \"component-name\" will now be a React function component that returns a React\n  Element.\n\n\n  Your component should adhere to the following:\n\n  First parameter is 'props', a map of properties passed to the component.\n\n  Second parameter is optional and is used with `React.forwardRef`.\n\n  'opts-map' is optional and can be used to pass some configuration options to the\n  macro. Current options:\n   - ':wrap' - ordered sequence of higher-order components to wrap the component in\n   - ':helix/features' - a map of feature flags to enable. See \"Experimental\" docs.\n\n  'body' should return a React Element.","^7",170,"^8",1,"^6","helix/core.clj","^U","~$helix.core/defnc","^W","^X","^Y",true],"~$defcomponent",["^ ","^W","^X","^U","~$helix.core/defcomponent","^6","helix/core.clj","^8",1,"^7",338,"^Y",true,"~:style/indent",[1,"~:form",[1]],"^L",["^M",[["^[","~$&","~$spec"]]],"^T","Defines a React class component."],"~$fnc",["^ ","^L",["^M",[["~$&","~$body"]]],"^T","Creates a new anonymous function React component. Used like:\n\n  (fnc ?optional-component-name\n    [props ?forwarded-ref]\n    {,,,opts-map}\n    ,,,body)\n\n  Returns a function that can be used just like a component defined with\n  `defnc`, i.e. accepts a JS object as props and the body receives them as a\n  map, can be used with `$` macro, forwardRef, etc.\n\n  `opts-map` is optional and can be used to pass some configuration options.\n  Current options:\n   - ':wrap' - ordered sequence of higher-order components to wrap the component in\n   - ':helix/features' - a map of feature flags to enable.\n\n  Some feature flags only pertain to named components, i.e. Fast Refresh and\n  factory functions, and thus can not be used with `fnc`.","^7",115,"^8",1,"^6","helix/core.clj","^U","~$helix.core/fnc","^W","^X","^Y",true],"~$suspense",["^ ","^L",["^M",[[["^ ","^N",["~$fallback"]],"~$&","^S"]]],"^T","Creates a React Suspense boundary.","^7",82,"^8",1,"^6","helix/core.clj","^U","~$helix.core/suspense","^W","^X","^Y",true],"~$$",["^ ","^L",["^M",[["^I","~$&","~$args"]]],"^T","Create a new React element from a valid React type.\n\n  Will try to statically convert props to a JS object.\n\n  To pass in dynamic props, use the special `&` or `:&` key in the props map\n  to have the map merged in.\n\n  Simple example:\n\n  ($ my-component\n     \"child1\"\n     ($ \"span\"\n        {:style {:color \"green\"}}\n        \"child2\" ))\n\n  Dynamic exmaple:\n\n  (let [dynamic-props {:foo \"bar\"}]\n    ($ my-component\n       {:static \"prop\"\n        & dynamic-props}))\n  ","^7",7,"^8",1,"^6","helix/core.clj","^U","~$helix.core/$","^W","^X","^Y",true],"~$defhook",["^ ","^L",["^M",[["~$sym","~$&","^18"]]],"^7",280,"^8",1,"^6","helix/core.clj","^U","~$helix.core/defhook","^W","^X","^Y",true],"~$<>",["^ ","^L",["^M",[["~$&","^S"]]],"^T","Creates a new React Fragment Element","^7",60,"^8",1,"^6","helix/core.clj","^U","~$helix.core/<>","^W","^X","^Y",true]],"^U","^X","~:reader-aliases",["^ "],"~:js-aliases",["^ ","react","~$module$node_modules$react$index"],"~:op","^W","~:imports",null,"~:requires",["^ ","~$impl.props","~$helix.impl.props","~$cljs-bean.core","^1M","~$bean","^1M","~$react","^1G","~$cljs.core","^1P","^1G","^1G","~$gobj","~$goog.object","~$goog","^1S","^1R","^1R","^1L","^1L","~$helix.impl.classes","^1T","~$helix.class","^1T"],"~:seen",["^H",["~:require","~:require-macros"]],"~:uses",null,"^1X",["^ ","^X","^X","^1P","^1P","^1K","^1L","^1L","^1L"],"^15",["^M",["~$ns","^X",["^M",["~:refer-clojure","~:exclude",["^I"]]],["^M",["^1W",["^1R","^Q","^1Q"],["^1L","^Q","^1K"],["^1T","^Q","^1U"],["^1M","^Q","^1N"],["react","^Q","^1O"]]],["^M",["^1X",["^X"]]]]],"~:flags",["^ ","^1W",["^H",[]],"^1X",["^H",[]]],"~:js-deps",["^ ","^1F",["^ ","^Q","^1O"]],"~:deps",["^1S","^1P","^1R","^1L","^1T","^1M","^1G"]],"^W","^X","~:resource-id",["~:shadow.build.classpath/resource","helix/core.cljs"],"~:compiled-at",1647704385235,"^1D",["^ ","^1K","^1L","^1M","^1M","^X","^X","^1N","^1M","^1O","^1G","^1P","^1P","^1G","^1G","^1Q","^1R","^1S","^1S","^1R","^1R","^1L","^1L","^1T","^1T","^1U","^1T"],"~:resource-name","helix/core.cljs","~:warnings",[],"~:source","(ns helix.core\n  (:refer-clojure :exclude [type])\n  (:require [goog.object :as gobj]\n            [helix.impl.props :as impl.props]\n            [helix.impl.classes :as helix.class]\n            [cljs-bean.core :as bean]\n            [\"react\" :as react])\n  (:require-macros [helix.core]))\n\n\n(when (exists? js/Symbol)\n  (extend-protocol IPrintWithWriter\n    js/Symbol\n    (-pr-writer [sym writer _]\n      (-write writer (str \"\\\"\" (.toString sym) \"\\\"\")))))\n\n\n(def Fragment react/Fragment)\n\n\n(def Suspense react/Suspense)\n\n\n(def create-element react/createElement)\n\n\n(def create-context react/createContext)\n\n\n;; this is to enable calling `(.createElement (get-react))` without doing\n;; a dynamic arity dispatch. See https://github.com/Lokeh/helix/issues/20\n(defn ^js/React get-react [] react)\n\n\n(defn $\n  \"Create a new React element from a valid React type.\n\n  Example:\n  ```\n  ($ MyComponent\n   \\\"child1\\\"\n   ($ \\\"span\\\"\n     {:style {:color \\\"green\\\"}}\n     \\\"child2\\\" ))\n  ```\"\n  [type & args]\n  (let [?p (first args)\n        ?c (rest args)\n        native? (or (keyword? type)\n                    (string? type)\n                    (:native (meta type)))\n        type' (if (keyword? type)\n                (name type)\n                type)]\n    (if (map? ?p)\n      (apply create-element\n             type'\n             (if native?\n               (impl.props/-dom-props ?p)\n               (impl.props/-props ?p))\n             ?c)\n      (apply create-element\n             type'\n             nil\n             args))))\n\n\n(def ^:deprecated $$\n  \"Dynamically create a new React element from a valid React type.\n\n  `$` can typically be faster, because it will statically process the arguments\n  at macro-time if possible.\n\n  Example:\n  ```\n  ($$ MyComponent\n   \\\"child1\\\"\n   ($$ \\\"span\\\"\n     {:style {:color \\\"green\\\"}}\n     \\\"child2\\\" ))\n  ```\"\n $)\n\n\n(defprotocol IExtractType\n  (-type [factory] \"Extracts the underlying type from the factory function.\"))\n\n\n(defn type\n  [f]\n  (-type f))\n\n\n(defn factory\n  \"Creates a factory function for a React component\"\n  [type]\n  (-> (fn factory [& args]\n        (apply $ type args))\n      (specify! IExtractType\n        (-type [_] type))))\n\n\n(defn cljs-factory\n  [type]\n  (-> (fn factory [& args]\n        (if (map? (first args))\n          (let [props (first args)]\n            (apply react/createElement\n                   type\n                   #js {\"helix/props\"\n                        (dissoc props\n                                :key\n                                :ref)\n                        \"key\" (get props :key js/undefined)\n                        \"ref\" (get props :ref js/undefined)}\n                   (rest args)))\n          (apply react/createElement\n                 type\n                 #js {}\n                 args)))\n      (specify! IExtractType\n        (-type [_] type))))\n\n\n(defn assoc-some [m k x]\n  (if (some? x)\n    (assoc m k x)\n    m))\n\n\n(defn extract-cljs-props\n  [o]\n  (when (and ^boolean goog/DEBUG (or (map? o) (nil? o)))\n    (throw (ex-info \"Props received were a map. This probably means you're calling your component as a function.\" {:props o})))\n  (if-let [props (gobj/get o \"helix/props\")]\n    (assoc-some props :children (gobj/get o \"children\"))\n    (bean/bean o)))\n\n\n(defn- props-kvs-identical?\n  [prev cur]\n  (let [prev-props (extract-cljs-props prev)\n        cur-props (extract-cljs-props cur)]\n    (and (= (count prev-props) (count cur-props))\n         (every?\n          #(identical? (get prev-props %) (get cur-props %))\n          (keys cur-props)))))\n\n\n(defn memo\n  \"Like React.memo, but passes props to `compare` as CLJS map-likes instead of\n  JS objects.\n  `compare` should return true if props are equal, and false if not.\"\n  ([component] (react/memo component props-kvs-identical?))\n  ([component compare]\n   (react/memo\n    component\n    (fn memo-compare\n      [o o']\n      (compare\n       (extract-cljs-props o)\n       (extract-cljs-props o'))))))\n\n\n\n;;\n;; -- class components\n;;\n\n\n\n(defn create-component [spec statics]\n  (let [render (.-render ^js spec)\n        render' (fn [this]\n                  (render\n                   this\n                   (extract-cljs-props (.-props ^js this))\n                   (.-state ^js this)))]\n    (gobj/set spec \"render\" render')\n    (helix.class/createComponent react/Component spec statics)))\n\n(comment\n  (def MyComponent\n    (create-component #js {:displayName \"Foo\"\n                           :constructor\n                           (fn [this]\n                             (set! (.-state this) #js {:count 3}))\n                           :render\n                           (fn [this props state]\n                             (prn props state)\n                             ($$ \"div\" (.-count (.-state this))))}\n                      nil))\n\n  (js/console.log MyComponent)\n\n  (rds/renderToString ($$ MyComponent {:foo \"baz\"})))\n\n\n;;\n;; -- React Fast Refresh\n;;\n\n\n(defn register!\n  \"Registers a component with the React Fresh runtime.\n  `type` is the component function, and `id` is the unique ID assigned to it\n  (e.g. component name) for cache invalidation.\"\n  [type id]\n  (when (exists? (.-$$Register$$ js/window))\n    (.$$Register$$ js/window type id)))\n\n\n(defn signature! []\n  ;; grrr `maybe` bug strikes again\n  (and (exists? (.-$$Signature$$ js/window))\n       (.$$Signature$$ js/window)))\n","~:reader-features",["^H",["~:cljs"]],"~:cljc",false,"~:source-map-compact",["^ ","mappings","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","names",["js/Symbol","cljs.core/PROTOCOL_SENTINEL","sym","writer","_","cljs.core/-write","helix.core/Fragment","js/module$node_modules$react$index.Fragment","helix.core/Suspense","js/module$node_modules$react$index.Suspense","helix.core/create-element","js/module$node_modules$react$index.createElement","helix.core/create-context","js/module$node_modules$react$index.createContext","helix.core/get-react","js/module$node_modules$react$index","var_args","args__4870__auto__","len__4864__auto__","i__4865__auto__","argseq__4871__auto__","cljs.core/IndexedSeq","helix.core/$","seq51250","G__51251","cljs.core/first","cljs.core/next","self__4851__auto__","type","args","?p","?c","cljs.core/rest","native?","or__4253__auto__","cljs.core/Keyword","cljs.core/meta","type'","cljs.core/name","cljs.core/map?","cljs.core.apply","helix.impl.props._dom_props","helix.impl.props._props","helix.core/$$","helix$core$IExtractType$_type$dyn","x__4550__auto__","m__4551__auto__","helix.core/-type","goog/typeOf","m__4549__auto__","cljs.core/missing-protocol","helix.core/IExtractType","factory","helix.core/type","f","helix.core/factory","x51271","helix.core/cljs-factory","props","cljs.core.dissoc","cljs.core.get","js/undefined","x51280","helix.core/assoc-some","m","k","x","cljs.core.assoc","helix.core/extract-cljs-props","o","goog/DEBUG","cljs.core.ex_info","temp__5718__auto__","helix.core.goog$module$goog$object.get","cljs_bean.core.bean","helix.core/props-kvs-identical?","prev","cur","prev-props","cur-props","cljs.core._EQ_","cljs.core/count","p1__51289#","cljs.core/every?","cljs.core/keys","G__51304","helix.core/memo","js/Error","component","js/module$node_modules$react$index.memo","compare","o'","G__51306","G__51307","helix.core/create-component","spec","statics","render","render'","this","G__51316","G__51317","G__51318","helix.core.goog$module$goog$object.set","helix.impl.classes/createComponent","js/module$node_modules$react$index.Component","helix.core/register!","id","js/window","helix.core/signature!","and__4251__auto__"]],"~:used-vars",["^H",["~$helix.core/signature!","~$cljs.core/PROTOCOL_SENTINEL","~$cljs.core/rest","~$helix.core/Suspense","~$helix.core.goog$module$goog$object.set","~$helix.core/type","~$js/undefined","~$js/module$node_modules$react$index","~$cljs.core/=","~$cljs.core/keys","~$cljs.core/-write","~$cljs.core/IndexedSeq","~$cljs.core/count","~$goog/typeOf","^1>","~$cljs.core/apply","~$cljs.core/Keyword","~$helix.impl.props/-dom-props","~$helix.core/assoc-some","~$cljs.core/dissoc","~$cljs-bean.core/bean","~$helix.core/factory","~$js/module$node_modules$react$index.createElement","~$js/Symbol","~$cljs.core/map?","~$helix.core/create-element","~$js/module$node_modules$react$index.Suspense","~$helix.core/register!","~$helix.core.goog$module$goog$object.get","~$helix.core/$$","~$cljs.core/get","~$js/module$node_modules$react$index.Fragment","~$helix.core/create-context","~$js/module$node_modules$react$index.memo","~$goog/DEBUG","~$cljs.core/missing-protocol","~$cljs.core/ex-info","~$cljs.core/meta","~$helix.core/props-kvs-identical?","~$cljs.core/next","~$helix.impl.props/-props","~$cljs.core/not","~$helix.core/get-react","~$helix.impl.classes/createComponent","~$cljs.core/assoc","~$helix.core/extract-cljs-props","~$helix.core/Fragment","~$helix.core/cljs-factory","~$helix.core/IExtractType","~$helix.core/memo","~$helix.core/-type","~$js/module$node_modules$react$index.createContext","~$cljs.core/first","~$js/window","~$js/module$node_modules$react$index.Component","~$helix.core/create-component","~$cljs.core/name","~$cljs.core/every?","~$js/Error"]]],"~:cache-keys",["~#cmap",[["^25","goog/dom/tagname.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","~:shadow.build.compiler/resolve",["^ ","~:require-id",null,"~:deps-ids",["^H",[]],"~:deps-syms",["^1S","~$goog.dom.HtmlElement"]]],["^25","helix/impl/classes.js"],["3a3acbe6059bd47c7089980630176e2fd7943dad","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/html/trustedtypes.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/labs/useragent/browser.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","~$goog.array","^1R","~$goog.labs.userAgent.util","~$goog.string.internal"]]],["^25","goog/html/safeurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","~$goog.asserts","~$goog.fs.url","~$goog.html.TrustedResourceUrl","~$goog.i18n.bidi.Dir","~$goog.i18n.bidi.DirectionalString","~$goog.string.Const","~$goog.string.TypedString","^3X"]]],["^25","goog/array/array.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3Y"]]],["^25","goog/debug/error.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/dom/nodetype.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/string/typedstring.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["~:shadow.build.npm/resource","node_modules/react/index.js"],["8bb0911dc09f89ce920abf1f1dfe18bfb7491740","384258095da6e9258793235bf5e297a992d36fca","a69a7f3d4a4636bf9035bc53c05b2d99a7b8af7f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["~$shadow.js","~$module$node_modules$react$cjs$react_production_min","~$module$node_modules$react$cjs$react_development"]]],["^25","shadow/js.js"],["c0ae67ac68acf29d6a773b8c37c8a78ea1cd9d10","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/object/object.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/dom/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3Y"]]],"~:SHADOW-TIMESTAMP",[1647696447000,1647696447000,1647696451000],["^44","node_modules/react/cjs/react.development.js"],["8bb0911dc09f89ce920abf1f1dfe18bfb7491740","384258095da6e9258793235bf5e297a992d36fca","754b7a48941975257c8955f6d5e511cb3a878737","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^45","~$module$node_modules$object_assign$index"]]],["^25","goog/math/long.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3Y","~$goog.reflect"]]],["^25","goog/html/trustedresourceurl.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3Y","~$goog.fs.blob","^3Z","~$goog.html.SafeScript","~$goog.html.trustedtypes","^40","^41","^42","^43"]]],["^25","goog/string/internal.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","cljs_bean/core.cljs"],["48253381fc2e9a7be115de76154157bad516ea85","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^1P","~$cljs-bean.from.cljs.core","^1R"]]],["^25","goog/functions/functions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/html/safestyle.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^42","~$goog.html.SafeUrl","^43","^3Y","^3X"]]],["^25","goog/dom/safe.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3Y","~$goog.dom.asserts","~$goog.functions","~$goog.html.SafeHtml","^4<","~$goog.html.SafeStyle","^4?","^3[","~$goog.html.uncheckedconversions","^42","^3X"]]],["^25","goog/html/safehtml.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^42","^40","^41","^4<","^4C","~$goog.html.SafeStyleSheet","^4?","~$goog.dom.TagName","^3[","^43","^3Y","~$goog.labs.userAgent.browser","^3V","^1R","^3X","~$goog.dom.tags","^4="]]],["^25","goog/dom/tags.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^1R"]]],["^25","helix/impl/props.cljc"],["3a3acbe6059bd47c7089980630176e2fd7943dad","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^1P","~$clojure.string","^1M","^1R"]]],["^25","goog/fs/blob.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/asserts/asserts.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","~$goog.debug.Error","~$goog.dom.NodeType"]]],["^25","goog/uri/uri.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3V","^3Y","~$goog.collections.maps","~$goog.string","~$goog.structs","~$goog.uri.utils","~$goog.uri.utils.ComponentIndex","~$goog.uri.utils.StandardQueryParam"]]],["^25","goog/collections/maps.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/i18n/bidi.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^44","node_modules/object-assign/index.js"],["8bb0911dc09f89ce920abf1f1dfe18bfb7491740","384258095da6e9258793235bf5e297a992d36fca","519ffd5a4c91b67302cc9947b794966d629860cd","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^45"]]],["^25","goog/fs/url.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/base.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",[]]],["^25","goog/structs/structs.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3V","^1R"]]],["^25","clojure/string.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^1P","^4M","~$goog.string.StringBuffer"]]],["^44","node_modules/react/cjs/react.production.min.js"],["8bb0911dc09f89ce920abf1f1dfe18bfb7491740","384258095da6e9258793235bf5e297a992d36fca","0a81b45abe33f0ad39b726512604018f94261db9","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^45","^49"]]],["^25","helix/core.cljs"],["3a3acbe6059bd47c7089980630176e2fd7943dad","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^1P","^1R","^1L","^1T","^1M","^1G"]]],["^25","goog/string/string.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","~$goog.dom.safe","^4D","^42","^3X"]]],["^25","goog/reflect/reflect.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/labs/useragent/util.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","~$goog.labs.userAgent","^3X"]]],["^25","goog/string/stringbuffer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/labs/useragent/useragent.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","goog/html/uncheckedconversions.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3Y","^4B","^4<","^4C","^4E","^4?","^3[","^42","^3X","^40"]]],["^25","cljs_bean/from/cljs/core.cljs"],["48253381fc2e9a7be115de76154157bad516ea85","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^1P"]]],["^25","goog/dom/htmlelement.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S"]]],["^25","cljs/core.cljs"],["7d51bc68e9eca42c3e2866d92e59ef7939005fc7","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","~$goog.math.Long","~$goog.math.Integer","^4M","^1R","^3V","~$goog.Uri","^4R"]]],["^25","goog/html/safescript.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^42","^43","^4=","^3Y"]]],["^25","goog/html/safestylesheet.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^42","^4C","^43","^1R","^3Y","^3X"]]],["^25","goog/math/integer.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^4:"]]],["^25","goog/uri/utils.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3Y","^4M"]]],["^25","goog/string/const.js"],["e7c400433b3c1fadb574d4cc5a65cddccff5500f","^3Q",["^ ","^3R",null,"^3S",["^H",[]],"^3T",["^1S","^3Y","^43"]]]]],"~:clj-info",["^ ","jar:file:/home/heefoo/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/set.clj",1634010075000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/core.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/pprint.clj",1634010075000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/util.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/java/io.clj",1634010075000,"jar:file:/home/heefoo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/errors.clj",1647696468000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/externs.clj",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/compiler.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map/base64_vlq.clj",1647696451000,"jar:file:/home/heefoo/.m2/repository/lilactown/helix/0.1.5/helix-0.1.5.jar!/helix/impl/props.cljc",1647696416000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/env.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/js_deps.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/impl/inspect.clj",1647696468000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/tagged_literals.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/api.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/core.clj",1634010075000,"jar:file:/home/heefoo/.m2/repository/lilactown/helix/0.1.5/helix-0.1.5.jar!/helix/core.clj",1647696416000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/impl.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/data.json/2.4.0/data.json-2.4.0.jar!/clojure/data/json.clj",1647696407000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/zip.clj",1634010075000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/passes/and_or.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/lilactown/helix/0.1.5/helix-0.1.5.jar!/helix/impl/analyzer.clj",1647696416000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map.clj",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/source_map/base64.clj",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/string.clj",1634010075000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer.cljc",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/default_data_readers.clj",1647696468000,"jar:file:/home/heefoo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader/reader_types.clj",1647696468000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/edn.clj",1634010075000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojure/1.10.0/clojure-1.10.0.jar!/clojure/instant.clj",1634010075000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/instant.clj",1647696451000,"jar:file:/home/heefoo/.m2/repository/org/clojure/tools.reader/1.3.6/tools.reader-1.3.6.jar!/clojure/tools/reader.clj",1647696468000,"jar:file:/home/heefoo/.m2/repository/org/clojure/clojurescript/1.11.4/clojurescript-1.11.4.jar!/cljs/analyzer/passes.cljc",1647696451000],"~:analyzer",["^ ","^3",null,"^4",["^ "],"^5",["^ ","^6","helix/core.cljs","^7",1,"^8",5,"^9",1,"^:",15],"^;",["^ ","^<","^=","^>","^?","^@","^A","^B","^C","^D","^E"],"~:shadow/protocol-prefixes",["^H",["helix$core$IExtractType$"]],"^F",null,"^G",["^H",["^I"]],"^J",["^ ","^K",["^ ","^L",["^M",[[["^ ","^N",["^O","^P"],"^Q","^R"],"~$&","^S"]]],"^T","Creates a Provider for a React Context value.\n\n  Example:\n\n    (def my-context (react/createContext))\n\n    (provider {:context my-context :value my-value} child1 child2 ...childN)","^7",66,"^8",1,"^6","helix/core.clj","^U","^V","^W","^X","^Y",true],"^Z",["^ ","^L",["^M",[["^[","~$&","^10"]]],"^T","Creates a new functional React component. Used like:\n\n  (defnc component-name\n    \"Optional docstring\"\n    [props ?ref]\n    {,,,opts-map}\n    ,,,body)\n\n  \"component-name\" will now be a React function component that returns a React\n  Element.\n\n\n  Your component should adhere to the following:\n\n  First parameter is 'props', a map of properties passed to the component.\n\n  Second parameter is optional and is used with `React.forwardRef`.\n\n  'opts-map' is optional and can be used to pass some configuration options to the\n  macro. Current options:\n   - ':wrap' - ordered sequence of higher-order components to wrap the component in\n   - ':helix/features' - a map of feature flags to enable. See \"Experimental\" docs.\n\n  'body' should return a React Element.","^7",170,"^8",1,"^6","helix/core.clj","^U","^11","^W","^X","^Y",true],"^12",["^ ","^W","^X","^U","^13","^6","helix/core.clj","^8",1,"^7",338,"^Y",true,"^14",[1,"^15",[1]],"^L",["^M",[["^[","~$&","^16"]]],"^T","Defines a React class component."],"^17",["^ ","^L",["^M",[["~$&","^18"]]],"^T","Creates a new anonymous function React component. Used like:\n\n  (fnc ?optional-component-name\n    [props ?forwarded-ref]\n    {,,,opts-map}\n    ,,,body)\n\n  Returns a function that can be used just like a component defined with\n  `defnc`, i.e. accepts a JS object as props and the body receives them as a\n  map, can be used with `$` macro, forwardRef, etc.\n\n  `opts-map` is optional and can be used to pass some configuration options.\n  Current options:\n   - ':wrap' - ordered sequence of higher-order components to wrap the component in\n   - ':helix/features' - a map of feature flags to enable.\n\n  Some feature flags only pertain to named components, i.e. Fast Refresh and\n  factory functions, and thus can not be used with `fnc`.","^7",115,"^8",1,"^6","helix/core.clj","^U","^19","^W","^X","^Y",true],"^1:",["^ ","^L",["^M",[[["^ ","^N",["^1;"]],"~$&","^S"]]],"^T","Creates a React Suspense boundary.","^7",82,"^8",1,"^6","helix/core.clj","^U","^1<","^W","^X","^Y",true],"~$$",["^ ","^L",["^M",[["^I","~$&","^1="]]],"^T","Create a new React element from a valid React type.\n\n  Will try to statically convert props to a JS object.\n\n  To pass in dynamic props, use the special `&` or `:&` key in the props map\n  to have the map merged in.\n\n  Simple example:\n\n  ($ my-component\n     \"child1\"\n     ($ \"span\"\n        {:style {:color \"green\"}}\n        \"child2\" ))\n\n  Dynamic exmaple:\n\n  (let [dynamic-props {:foo \"bar\"}]\n    ($ my-component\n       {:static \"prop\"\n        & dynamic-props}))\n  ","^7",7,"^8",1,"^6","helix/core.clj","^U","^1>","^W","^X","^Y",true],"^1?",["^ ","^L",["^M",[["^1@","~$&","^18"]]],"^7",280,"^8",1,"^6","helix/core.clj","^U","^1A","^W","^X","^Y",true],"^1B",["^ ","^L",["^M",[["~$&","^S"]]],"^T","Creates a new React Fragment Element","^7",60,"^8",1,"^6","helix/core.clj","^U","^1C","^W","^X","^Y",true]],"~:shadow/js-access-properties",["^H",["$$Signature$$","createElement","Fragment","$$Register$$","createContext","Suspense","Component","memo"]],"^U","^X","^1D",["^ "],"^1E",["^ ","^1F","^1G"],"^1I",null,"^1J",["^ ","^1K","^1L","^1M","^1M","^1N","^1M","^1O","^1G","^1P","^1P","^1G","^1G","^1Q","^1R","^1S","^1S","^1R","^1R","^1L","^1L","^1T","^1T","^1U","^1T"],"^1V",["^H",["^1W","^1X"]],"~:shadow/js-access-global",["^H",["window","Symbol","undefined","Error"]],"^1Y",null,"~:defs",["^ ","~$$$",["^ ","^5",["^ ","^6","helix/core.cljs","^7",68,"^8",19,"^9",68,"^:",21,"~:deprecated",true],"^U","^31","^6","helix/core.cljs","^:",21,"^8",1,"^7",68,"^5T",true,"^9",68,"^T","Dynamically create a new React element from a valid React type.\n\n  `$` can typically be faster, because it will statically process the arguments\n  at macro-time if possible.\n\n  Example:\n  ```\n  ($$ MyComponent\n   \"child1\"\n   ($$ \"span\"\n     {:style {:color \"green\"}}\n     \"child2\" ))\n  ```"],"~$create-context",["^ ","^U","^34","^6","helix/core.cljs","^7",27,"^8",1,"^9",27,"^:",20,"^5",["^ ","^6","helix/core.cljs","^7",27,"^8",6,"^9",27,"^:",20],"~:tag","~$js"],"~$memo",["^ ","~:protocol-inline",null,"^5",["^ ","^6","helix/core.cljs","^7",150,"^8",7,"^9",150,"^:",11,"^L",["^M",["~$quote",["^M",[["~$component"],["^5[","~$compare"]]]]],"^T","Like React.memo, but passes props to `compare` as CLJS map-likes instead of\n  JS objects.\n  `compare` should return true if props are equal, and false if not.","~:top-fn",["^ ","~:variadic?",false,"~:fixed-arity",2,"~:max-fixed-arity",2,"~:method-params",[["^5["],["^5[","^60"]],"^L",["^M",[["^5["],["^5[","^60"]]],"~:arglists-meta",["^M",[null,null]]]],"^U","^3E","^6","helix/core.cljs","^:",11,"^61",["^ ","^62",false,"^63",2,"^64",2,"^65",[["^5["],["^5[","^60"]],"^L",["^M",[["^5["],["^5[","^60"]]],"^66",["^M",[null,null]]],"^65",[["^5["],["^5[","^60"]],"~:protocol-impl",null,"^63",2,"^66",["^M",[null,null]],"^8",1,"^62",false,"~:methods",[["^ ","^63",1,"^62",false,"^5V","^5W"],["^ ","^63",2,"^62",false,"^5V","^5W"]],"^7",150,"^9",150,"^64",2,"~:fn-var",true,"^L",["^M",[["^5["],["^5[","^60"]]],"^T","Like React.memo, but passes props to `compare` as CLJS map-likes instead of\n  JS objects.\n  `compare` should return true if props are equal, and false if not."],"~$IExtractType",["^ ","^5",["^ ","~:protocol-symbol",true,"^6","helix/core.cljs","^:",26,"^8",14,"^7",85,"~:protocol-info",["^ ","^68",["^ ","~$-type",[["~$factory"]]]],"^9",85,"~:sigs",["^ ","~:-type",["^ ","^U","^6=","^L",["^M",[["^6>"]]],"^T","Extracts the underlying type from the factory function."]],"~:jsdoc",["^M",["@interface"]]],"^6;",true,"^U","^3D","^6","helix/core.cljs","^:",26,"^8",1,"^7",85,"^6<",["^ ","^68",["^ ","^6=",[["^6>"]]]],"~:info",null,"^9",85,"^5V","~$any","^6?",["^ ","^6@",["^ ","^U","^6=","^L",["^M",[["^6>"]]],"^T","Extracts the underlying type from the factory function."]],"~:impls",["^H",["~$x51280","~$x51271"]],"^6A",["^M",["@interface"]]],"~$props-kvs-identical?",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",140,"^8",8,"^9",140,"^:",28,"~:private",true,"^L",["^M",["^5Z",["^M",[["~$prev","~$cur"]]]]]],"^6H",true,"^U","^3:","^6","helix/core.cljs","^:",28,"^65",["^M",[["^6I","^6J"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",140,"~:ret-tag","~$boolean","^9",140,"^64",2,"^69",true,"^L",["^M",["^5Z",["^M",[["^6I","^6J"]]]]]],"~$get-react",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",32,"^8",17,"^9",32,"^:",26,"^5V","~$js/React","^L",["^M",["^5Z",["^M",[[]]]]]],"^U","^3>","^6","helix/core.cljs","^:",26,"^65",["^M",[[]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",32,"^6K","^6N","^9",32,"^64",0,"^5V","^6N","^69",true,"^L",["^M",["^5Z",["^M",[[]]]]]],"~$create-component",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",172,"^8",7,"^9",172,"^:",23,"^L",["^M",["^5Z",["^M",[["^16","~$statics"]]]]]],"^U","^3K","^6","helix/core.cljs","^:",23,"^65",["^M",[["^16","^6P"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",172,"^6K","^6C","^9",172,"^64",2,"^69",true,"^L",["^M",["^5Z",["^M",[["^16","^6P"]]]]]],"~$Fragment",["^ ","^U","^3B","^6","helix/core.cljs","^7",18,"^8",1,"^9",18,"^:",14,"^5",["^ ","^6","helix/core.cljs","^7",18,"^8",6,"^9",18,"^:",14],"^5V","^5W"],"~$extract-cljs-props",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",131,"^8",7,"^9",131,"^:",25,"^L",["^M",["^5Z",["^M",[["~$o"]]]]]],"^U","^3A","^6","helix/core.cljs","^:",25,"^65",["^M",[["~$o"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",131,"^6K",["^H",[null,"~$clj","^6C","~$cljs-bean.core/Bean"]],"^9",131,"^64",1,"^69",true,"^L",["^M",["^5Z",["^M",[["~$o"]]]]]],"~$cljs-factory",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",103,"^8",7,"^9",103,"^:",19,"^L",["^M",["^5Z",["^M",[["^I"]]]]]],"^U","^3C","^6","helix/core.cljs","^:",19,"^65",["^M",[["^I"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",103,"^6K","~$function","^9",103,"^64",1,"^69",true,"^L",["^M",["^5Z",["^M",[["^I"]]]]]],"^6=",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",86,"^8",4,"^9",86,"^:",9,"~:protocol","^3D","^T","Extracts the underlying type from the factory function.","^L",["^M",["^5Z",["^M",[["^6>"]]]]]],"^6W","^3D","^U","^3F","^6","helix/core.cljs","^:",9,"^65",["^M",[["^6>"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",85,"^6K","^6C","^9",86,"^64",1,"^69",true,"^L",["^M",["^5Z",["^M",[["^6>"]]]]],"^T","Extracts the underlying type from the factory function."],"~$Suspense",["^ ","^U","^2D","^6","helix/core.cljs","^7",21,"^8",1,"^9",21,"^:",14,"^5",["^ ","^6","helix/core.cljs","^7",21,"^8",6,"^9",21,"^:",14],"^5V","^5W"],"~$signature!",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",213,"^8",7,"^9",213,"^:",17,"^L",["^M",["^5Z",["^M",[[]]]]]],"^U","^2A","^6","helix/core.cljs","^:",17,"^65",["^M",[[]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",213,"^6K",["^H",["^6L","^5W"]],"^9",213,"^64",0,"^69",true,"^L",["^M",["^5Z",["^M",[[]]]]]],"^I",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",89,"^8",7,"^9",89,"^:",11,"^L",["^M",["^5Z",["^M",[["~$f"]]]]]],"^U","^2F","^6","helix/core.cljs","^:",11,"^65",["^M",[["~$f"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",89,"^6K","^6C","^9",89,"^64",1,"^69",true,"^L",["^M",["^5Z",["^M",[["~$f"]]]]]],"~$$",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",35,"^8",7,"^9",35,"^:",8,"^L",["^M",["^5Z",["^M",[["^I","~$&","^1="]]]]],"^T","Create a new React element from a valid React type.\n\n  Example:\n  ```\n  ($ MyComponent\n   \"child1\"\n   ($ \"span\"\n     {:style {:color \"green\"}}\n     \"child2\" ))\n  ```","^61",["^ ","^62",true,"^63",1,"^64",1,"^65",[["^M",["^I","^1="]]],"^L",["^M",[["^I","~$&","^1="]]],"^66",["^M",[null]]]],"^U","^1>","^6","helix/core.cljs","^:",8,"^61",["^ ","^62",true,"^63",1,"^64",1,"^65",[["^M",["^I","^1="]]],"^L",["^M",[["^I","~$&","^1="]]],"^66",["^M",[null]]],"^65",[["^M",["^I","^1="]]],"^67",null,"^63",1,"^66",["^M",[null]],"^8",1,"^62",true,"^68",[["^ ","^63",1,"^62",true,"^5V","^6C"]],"^7",35,"^6K","^6C","^9",35,"^64",1,"^69",true,"^L",["^M",[["^I","~$&","^1="]]],"^T","Create a new React element from a valid React type.\n\n  Example:\n  ```\n  ($ MyComponent\n   \"child1\"\n   ($ \"span\"\n     {:style {:color \"green\"}}\n     \"child2\" ))\n  ```"],"^6>",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",94,"^8",7,"^9",94,"^:",14,"^L",["^M",["^5Z",["^M",[["^I"]]]]],"^T","Creates a factory function for a React component"],"^U","^2U","^6","helix/core.cljs","^:",14,"^65",["^M",[["^I"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",94,"^6K","^6V","^9",94,"^64",1,"^69",true,"^L",["^M",["^5Z",["^M",[["^I"]]]]],"^T","Creates a factory function for a React component"],"~$assoc-some",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",125,"^8",7,"^9",125,"^:",17,"^L",["^M",["^5Z",["^M",[["~$m","~$k","~$x"]]]]]],"^U","^2R","^6","helix/core.cljs","^:",17,"^65",["^M",[["~$m","~$k","~$x"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",125,"^6K",["^H",[null,"^6S","^6C"]],"^9",125,"^64",3,"^69",true,"^L",["^M",["^5Z",["^M",[["~$m","~$k","~$x"]]]]]],"~$create-element",["^ ","^U","^2Y","^6","helix/core.cljs","^7",24,"^8",1,"^9",24,"^:",20,"^5",["^ ","^6","helix/core.cljs","^7",24,"^8",6,"^9",24,"^:",20],"^5V","^5W"],"~$register!",["^ ","^5Y",null,"^5",["^ ","^6","helix/core.cljs","^7",204,"^8",7,"^9",204,"^:",16,"^L",["^M",["^5Z",["^M",[["^I","~$id"]]]]],"^T","Registers a component with the React Fresh runtime.\n  `type` is the component function, and `id` is the unique ID assigned to it\n  (e.g. component name) for cache invalidation."],"^U","^2[","^6","helix/core.cljs","^:",16,"^65",["^M",[["^I","^71"]]],"^67",null,"^66",["^M",[null,null]],"^8",1,"^62",false,"^7",204,"^6K",["^H",["^5W","~$clj-nil"]],"^9",204,"^64",2,"^69",true,"^L",["^M",["^5Z",["^M",[["^I","^71"]]]]],"^T","Registers a component with the React Fresh runtime.\n  `type` is the component function, and `id` is the unique ID assigned to it\n  (e.g. component name) for cache invalidation."]],"^1X",["^ ","^X","^X","^1P","^1P","^1K","^1L","^1L","^1L"],"~:cljs.analyzer/constants",["^ ","^1V",["^H",["~:children","~:key","~:ref","~:native","~:props"]],"~:order",["^77","^75","^76","^78","^74"]],"^21",["^ ","^1W",["^H",[]],"^1X",["^H",[]]],"^22",["^ ","^1F",["^ ","^Q","^1O"]],"^23",["^1S","^1P","^1R","^1L","^1T","^1M","^1G"]],"^W","^X","~:ns-specs",["^ "],"~:ns-spec-vars",["^H",[]],"~:compiler-options",["^3P",[["^7<","~:static-fns"],true,["^7<","~:shadow-tweaks"],null,["^7<","~:source-map-inline"],null,["^7<","~:elide-asserts"],false,["^7<","~:optimize-constants"],null,["^7<","^28"],null,["^7<","~:external-config"],null,["^7<","~:tooling-config"],null,["^7<","~:emit-constants"],null,["^7<","~:load-tests"],null,["^7<","~:form-size-threshold"],null,["^7<","~:global-goog-object&array"],null,["^7<","~:data-readers"],null,["^7<","~:infer-externs"],"~:auto",["^7<","^2:"],null,["~:js-options","~:js-provider"],"~:shadow",["~:mode"],"~:dev",["^7<","~:fn-invoke-direct"],null,["^7<","~:source-map"],"/dev/null"]]]